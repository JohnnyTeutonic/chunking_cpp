name: CI

on:
  push:
    branches: [ main, test ]
  pull_request:
    branches: [ main, test ]

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install linting dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format

    - name: Check code formatting
      run: |
        make format-check

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libstdc++6 libgtest-dev lcov doxygen graphviz libboost-all-dev

    - name: Configure build
      run: |
        chmod +x configure
        ./configure --enable-tests --enable-docs --enable-sanitizers --enable-coverage

    - name: Build project
      run: |
        CXXFLAGS="-fprofile-arcs -ftest-coverage -fprofile-update=atomic" make

    - name: Run tests
      run: |
        chmod +x build/tests/run_tests.sh
        make test
        ./build/tests/run_tests.sh
        cat build/tests/test_results.xml

    - name: Generate documentation
      run: |
        make docs

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: build/tests/test_results.xml

    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: build/docs/html

    - name: Run tests with coverage
      run: |
        # Initialize coverage
        lcov --rc lcov_branch_coverage=1 --zerocounters --directory . --quiet
        
        # Run tests
        export LLVM_PROFILE_FILE="coverage-%p.profraw"
        chmod +x build/tests/run_tests.sh
        cd build/tests && ./run_tests.sh
        cd ../..
        
        # Collect coverage with mismatch errors ignored
        lcov --rc lcov_branch_coverage=1 --directory . --capture --output-file coverage.info --ignore-errors negative,empty,mismatch,unused --quiet
        
        # Remove unwanted coverage data
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '/usr/*' '*/tests/*' --output-file filtered.info --ignore-errors negative,empty,mismatch,unused
        
        # List coverage data
        lcov --rc lcov_branch_coverage=1 --list filtered.info --ignore-errors negative,empty,mismatch,unused

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: filtered.info

    - name: Upload to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: filtered.info
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: JohnnyTeutonic/chunking_cpp
        verbose: true

    - name: Fix coverage paths
      run: |
        # Get the absolute path to the project root
        PROJECT_ROOT=$(pwd)
        # Escape special characters in the path for sed
        ESCAPED_PATH=$(echo "$PROJECT_ROOT" | sed 's/[\/&]/\\&/g')
        # Replace the absolute path with /github/workspace/
        sed -i "s|$ESCAPED_PATH/|/github/workspace/|g" filtered.info

    - name: Debug coverage files
      run: |
        find build -name "*.gcda" -o -name "*.gcno"