name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libgtest-dev lcov doxygen graphviz

    - name: Configure build
      run: |
        chmod +x configure
        ./configure --enable-tests --enable-docs --enable-sanitizers --enable-coverage

    - name: Build project
      run: make

    - name: Run tests
      run: |
        make test
        ./build/tests/run_tests.sh
        cat build/tests/test_results.xml

    - name: Generate documentation
      run: |
        make docs

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: build/tests/test_results.xml

    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: build/docs/html

    - name: Run tests with coverage
      run: |
        # Initialize coverage
        lcov --zerocounters --directory . --quiet
        lcov --capture --initial --directory . --output-file base.info --ignore-errors empty,mismatch,range --quiet
        
        # Run tests
        export LLVM_PROFILE_FILE="coverage-%p.profraw"
        cd build/tests && ./run_tests.sh
        cd ../..
        
        # Collect coverage
        lcov --directory . --capture --output-file test.info --ignore-errors empty,mismatch,range --quiet
        lcov --add-tracefile base.info --add-tracefile test.info --output-file coverage.info
        lcov --remove coverage.info '/usr/*' '*/tests/*' '*/build/*' --output-file filtered.info
        lcov --list filtered.info

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: filtered.info

    - name: Upload to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: filtered.info
        fail_ci_if_error: true

    - name: Fix coverage paths
      run: |
        sed -i 's|/mnt/c/Users/jonat/OneDrive/Documents/Python Scripts/chunking_cpp/|/github/workspace/|g' build/tests/coverage.info

    - name: Debug coverage files
      run: |
        find build -name "*.gcda" -o -name "*.gcno"
